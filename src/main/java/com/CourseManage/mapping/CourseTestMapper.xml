<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CourseManage.dao.CourseTestMapper">
  <resultMap id="BaseResultMap" type="com.CourseManage.pojo.CourseTest">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="test_name" jdbcType="VARCHAR" property="testName" />
    <result column="pice" jdbcType="INTEGER" property="pice" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="questionA" jdbcType="VARCHAR" property="questiona" />
    <result column="questionB" jdbcType="VARCHAR" property="questionb" />
    <result column="questionC" jdbcType="VARCHAR" property="questionc" />
    <result column="op" jdbcType="VARCHAR" property="op" />
  </resultMap>
  <sql id="Base_Column_List">
    id, course_id, test_name, pice, flag, questionA, questionB, questionC, op
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_test
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course_test
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.CourseManage.pojo.CourseTest">
    insert into course_test (id, course_id, test_name, 
      pice, flag, questionA, 
      questionB, questionC, op
      )
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{testName,jdbcType=VARCHAR}, 
      #{pice,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, #{questiona,jdbcType=VARCHAR}, 
      #{questionb,jdbcType=VARCHAR}, #{questionc,jdbcType=VARCHAR}, #{op,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.CourseManage.pojo.CourseTest">
    insert into course_test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="testName != null">
        test_name,
      </if>
      <if test="pice != null">
        pice,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="questiona != null">
        questionA,
      </if>
      <if test="questionb != null">
        questionB,
      </if>
      <if test="questionc != null">
        questionC,
      </if>
      <if test="op != null">
        op,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="testName != null">
        #{testName,jdbcType=VARCHAR},
      </if>
      <if test="pice != null">
        #{pice,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="questiona != null">
        #{questiona,jdbcType=VARCHAR},
      </if>
      <if test="questionb != null">
        #{questionb,jdbcType=VARCHAR},
      </if>
      <if test="questionc != null">
        #{questionc,jdbcType=VARCHAR},
      </if>
      <if test="op != null">
        #{op,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.CourseManage.pojo.CourseTest">
    update course_test
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="testName != null">
        test_name = #{testName,jdbcType=VARCHAR},
      </if>
      <if test="pice != null">
        pice = #{pice,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="questiona != null">
        questionA = #{questiona,jdbcType=VARCHAR},
      </if>
      <if test="questionb != null">
        questionB = #{questionb,jdbcType=VARCHAR},
      </if>
      <if test="questionc != null">
        questionC = #{questionc,jdbcType=VARCHAR},
      </if>
      <if test="op != null">
        op = #{op,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.CourseManage.pojo.CourseTest">
    update course_test
    set course_id = #{courseId,jdbcType=INTEGER},
      test_name = #{testName,jdbcType=VARCHAR},
      pice = #{pice,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      questionA = #{questiona,jdbcType=VARCHAR},
      questionB = #{questionb,jdbcType=VARCHAR},
      questionC = #{questionc,jdbcType=VARCHAR},
      op = #{op,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPage" parameterType="Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from course_test
    where  course_id = #{courseid,jdbcType=INTEGER}
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>
  </select>

  <select id="selectCount" parameterType="java.lang.Integer" resultType="int">
    select
      count(*)
    from course_test
    where course_id = #{courseid,jdbcType=INTEGER}
  </select>
  <select id="selectByTestname" parameterType="Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from course_test
    where test_name = #{testname} and course_id = #{courseid,jdbcType=INTEGER}
  </select>
</mapper>