<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ResourceManage.dao.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.ResourceManage.pojo.Resource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="filename" jdbcType="VARCHAR" property="filename" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="downloadTimes" jdbcType="INTEGER" property="downloadTimes" />

  </resultMap>

  <sql id="Base_Column_List">
    id, name, content, price, filename, userid, time, flag, score, downloadTimes
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resources
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resources
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.ResourceManage.pojo.Resource">
    insert into resources (id, name, content, 
      price, filename, userid, 
      time, flag)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{price,jdbcType=INTEGER}, #{filename,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{flag,jdbcType=INTEGER})
  </insert>

  <insert id="insertSelective" parameterType="com.ResourceManage.pojo.Resource">
    insert into resources
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="filename != null">
        filename,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.ResourceManage.pojo.Resource">
    update resources
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="filename != null">
        filename = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.ResourceManage.pojo.Resource">
    update resources
    set name = #{name,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      filename = #{filename,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=INTEGER},
      score = #{score,jdbcType=DOUBLE},
      downloadTimes = #{downloadTimes,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByUserid" parameterType="String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from resources
    where userid = #{userid,jdbcType=VARCHAR}
  </select>

  <select id="selectByPage" parameterType="Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from resources
    where  flag = 0
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>
  </select>

  <select id="selectCount" parameterType="map" resultType="int">
    select
      count(*)
    from resources
      <where>
          <if test="keyword != null and !&quot;&quot;.equals(keyword.trim())">
              name=#{keyword}
              or content like '%' #{keyword} '%'
              or userid like '%' #{keyword} '%'
          </if>
          and flag = 0
      </where>
  </select>

  <select id="selectCount1" parameterType="map" resultType="int">
    select
      count(*)
    from resources
      <where>
          <if test="keyword != null and !&quot;&quot;.equals(keyword.trim())">
              name=#{keyword}
              or content like '%' #{keyword} '%'
              or userid like '%' #{keyword} '%'
          </if>
      </where>
  </select>

    <select id="selectCount2" parameterType="map" resultType="int">
        select
        count(*)
        from resources
        where userid=#{keyword}
    </select>

   <update id="updateflagByid1" parameterType="java.lang.Integer">
    update resources
    set
      flag = 1
      where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateflagByid2" parameterType="java.lang.Integer">
    update resources
    set
      flag = 2
      where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectByKeyWordsByPage" parameterType="map" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from resources
        <where>
            <if test="keyword != null and !&quot;&quot;.equals(keyword.trim())">
                name=#{keyword}
                or content like '%' #{keyword} '%'
                or userid like '%' #{keyword} '%'
            </if>
            and flag = 0
        </where>
        order by ID limit #{start},#{size}
    </select>

  <select id="Manage_selectByKeyWordsByPage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from resources
    <where>
      <if test="keyword != null and !&quot;&quot;.equals(keyword.trim())">
        and name=#{keyword}
        or content like '%' #{keyword} '%'
        or userid like '%' #{keyword} '%'
      </if>
    </where>
    order by ID limit #{start},#{size}
  </select>

    <select id="selectByUserNameByPage" parameterType="map" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from resources
        where userid=#{keyword}
        order by ID limit #{start},#{size}
    </select>
</mapper>